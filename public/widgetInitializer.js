// Generated by CoffeeScript 1.3.3
if (typeof define !== 'function') { var define = require('amdefine')(module) };

define([], function() {
  var WidgetInitializer;
  WidgetInitializer = (function() {

    function WidgetInitializer() {}

    WidgetInitializer.prototype.widgets = {};

    WidgetInitializer.prototype.rootWidget = null;

    WidgetInitializer.prototype._loadingCount = 0;

    WidgetInitializer.prototype._initEnd = false;

    WidgetInitializer.prototype._widgetOrder = [];

    WidgetInitializer.prototype.setRootWidget = function(widget) {
      return this.rootWidget = widget;
    };

    WidgetInitializer.prototype.getTemplateCode = function() {
      return "<script>\n  require(['./widgetInitializer'],\n  function (wi) {\n    $(function() {\n      " + (this.rootWidget.getInitCode()) + "\n      wi.endInit();\n    });\n  });\n</script>";
    };

    WidgetInitializer.prototype.endInit = function() {
      return this._initEnd = true;
    };

    WidgetInitializer.prototype.init = function(widgetPath, ctx, namedChilds, parentId) {
      var _this = this;
      console.log(widgetPath);
      this._loadingCount++;
      this._widgetOrder.push(ctx.id);
      return require(["./" + widgetPath], function(WidgetClass) {
        var widget, _ref;
        widget = new WidgetClass(ctx.id);
        widget.loadContext(ctx);
        console.log(ctx.id);
        _this.widgets[ctx.id] = {
          'widget': widget,
          'namedChilds': namedChilds
        };
        if (parentId != null) {
          if (_this.widgets[parentId] != null) {
            _this.widgets[parentId].widget.registerChild(widget, (_ref = _this.widgets[parentId].namedChilds[ctx.id]) != null ? _ref : null);
          } else {
            throw "Try to use uninitialized parent widget with id = " + parentId;
          }
        }
        _this._loadingCount--;
        console.log(_this._loadingCount);
        if (_this._loadingCount === 0 && _this._initEnd) {
          return _this.setupBindings();
        }
      });
    };

    WidgetInitializer.prototype.setupBindings = function() {
      var id, _i, _len, _ref, _results;
      console.log('setupBindings');
      _ref = this._widgetOrder.reverse();
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        id = _ref[_i];
        _results.push(this.bind(id));
      }
      return _results;
    };

    WidgetInitializer.prototype.bind = function(widgetId) {
      console.log(this, this.widgets[widgetId], this.widgets.widget1, widgetId);
      if (this.widgets[widgetId] != null) {
        return this.widgets[widgetId].widget.initBehaviour();
      } else {
        throw "Try to use uninitialized widget with id = " + widgetId;
      }
    };

    return WidgetInitializer;

  })();
  return new WidgetInitializer;
});
